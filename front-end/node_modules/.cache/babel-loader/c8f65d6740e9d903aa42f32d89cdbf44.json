{"ast":null,"code":"'use strict'; // there's 3 implementations written in increasing order of efficiency\n// 1 - no Set type is defined\n\nfunction uniqNoSet(arr) {\n  var ret = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    if (ret.indexOf(arr[i]) === -1) {\n      ret.push(arr[i]);\n    }\n  }\n\n  return ret;\n} // 2 - a simple Set type is defined\n\n\nfunction uniqSet(arr) {\n  var seen = new Set();\n  return arr.filter(function (el) {\n    if (!seen.has(el)) {\n      seen.add(el);\n      return true;\n    }\n  });\n} // 3 - a standard Set type is defined and it has a forEach method\n\n\nfunction uniqSetWithForEach(arr) {\n  var ret = [];\n  new Set(arr).forEach(function (el) {\n    ret.push(el);\n  });\n  return ret;\n} // V8 currently has a broken implementation\n// https://github.com/joyent/node/issues/8449\n\n\nfunction doesForEachActuallyWork() {\n  var ret = false;\n  new Set([true]).forEach(function (el) {\n    ret = el;\n  });\n  return ret === true;\n}\n\nif ('Set' in global) {\n  if (typeof Set.prototype.forEach === 'function' && doesForEachActuallyWork()) {\n    module.exports = uniqSetWithForEach;\n  } else {\n    module.exports = uniqSet;\n  }\n} else {\n  module.exports = uniqNoSet;\n}","map":{"version":3,"sources":["D:/Code/College/ASDL/ASDL/front-end/node_modules/randomstring/node_modules/array-uniq/index.js"],"names":["uniqNoSet","arr","ret","i","length","indexOf","push","uniqSet","seen","Set","filter","el","has","add","uniqSetWithForEach","forEach","doesForEachActuallyWork","global","prototype","module","exports"],"mappings":"AAAA,a,CAEA;AAEA;;AACA,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AACvB,MAAIC,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACpC,QAAID,GAAG,CAACG,OAAJ,CAAYJ,GAAG,CAACE,CAAD,CAAf,MAAwB,CAAC,CAA7B,EAAgC;AAC/BD,MAAAA,GAAG,CAACI,IAAJ,CAASL,GAAG,CAACE,CAAD,CAAZ;AACA;AACD;;AAED,SAAOD,GAAP;AACA,C,CAED;;;AACA,SAASK,OAAT,CAAiBN,GAAjB,EAAsB;AACrB,MAAIO,IAAI,GAAG,IAAIC,GAAJ,EAAX;AACA,SAAOR,GAAG,CAACS,MAAJ,CAAW,UAAUC,EAAV,EAAc;AAC/B,QAAI,CAACH,IAAI,CAACI,GAAL,CAASD,EAAT,CAAL,EAAmB;AAClBH,MAAAA,IAAI,CAACK,GAAL,CAASF,EAAT;AACA,aAAO,IAAP;AACA;AACD,GALM,CAAP;AAMA,C,CAED;;;AACA,SAASG,kBAAT,CAA4Bb,GAA5B,EAAiC;AAChC,MAAIC,GAAG,GAAG,EAAV;AAEC,MAAIO,GAAJ,CAAQR,GAAR,CAAD,CAAec,OAAf,CAAuB,UAAUJ,EAAV,EAAc;AACpCT,IAAAA,GAAG,CAACI,IAAJ,CAASK,EAAT;AACA,GAFD;AAIA,SAAOT,GAAP;AACA,C,CAED;AACA;;;AACA,SAASc,uBAAT,GAAmC;AAClC,MAAId,GAAG,GAAG,KAAV;AAEC,MAAIO,GAAJ,CAAQ,CAAC,IAAD,CAAR,CAAD,CAAkBM,OAAlB,CAA0B,UAAUJ,EAAV,EAAc;AACvCT,IAAAA,GAAG,GAAGS,EAAN;AACA,GAFD;AAIA,SAAOT,GAAG,KAAK,IAAf;AACA;;AAED,IAAI,SAASe,MAAb,EAAqB;AACpB,MAAI,OAAOR,GAAG,CAACS,SAAJ,CAAcH,OAArB,KAAiC,UAAjC,IAA+CC,uBAAuB,EAA1E,EAA8E;AAC7EG,IAAAA,MAAM,CAACC,OAAP,GAAiBN,kBAAjB;AACA,GAFD,MAEO;AACNK,IAAAA,MAAM,CAACC,OAAP,GAAiBb,OAAjB;AACA;AACD,CAND,MAMO;AACNY,EAAAA,MAAM,CAACC,OAAP,GAAiBpB,SAAjB;AACA","sourcesContent":["'use strict';\r\n\r\n// there's 3 implementations written in increasing order of efficiency\r\n\r\n// 1 - no Set type is defined\r\nfunction uniqNoSet(arr) {\r\n\tvar ret = [];\r\n\r\n\tfor (var i = 0; i < arr.length; i++) {\r\n\t\tif (ret.indexOf(arr[i]) === -1) {\r\n\t\t\tret.push(arr[i]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn ret;\r\n}\r\n\r\n// 2 - a simple Set type is defined\r\nfunction uniqSet(arr) {\r\n\tvar seen = new Set();\r\n\treturn arr.filter(function (el) {\r\n\t\tif (!seen.has(el)) {\r\n\t\t\tseen.add(el);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// 3 - a standard Set type is defined and it has a forEach method\r\nfunction uniqSetWithForEach(arr) {\r\n\tvar ret = [];\r\n\r\n\t(new Set(arr)).forEach(function (el) {\r\n\t\tret.push(el);\r\n\t});\r\n\r\n\treturn ret;\r\n}\r\n\r\n// V8 currently has a broken implementation\r\n// https://github.com/joyent/node/issues/8449\r\nfunction doesForEachActuallyWork() {\r\n\tvar ret = false;\r\n\r\n\t(new Set([true])).forEach(function (el) {\r\n\t\tret = el;\r\n\t});\r\n\r\n\treturn ret === true;\r\n}\r\n\r\nif ('Set' in global) {\r\n\tif (typeof Set.prototype.forEach === 'function' && doesForEachActuallyWork()) {\r\n\t\tmodule.exports = uniqSetWithForEach;\r\n\t} else {\r\n\t\tmodule.exports = uniqSet;\r\n\t}\r\n} else {\r\n\tmodule.exports = uniqNoSet;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}